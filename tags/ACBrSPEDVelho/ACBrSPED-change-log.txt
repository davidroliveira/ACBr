{******************************************************************************}
{ Projeto: Componentes ACBr                                                    }
{ Biblioteca multi plataforma de componentes Delphi para interação com equipa- }
{ mentos de Automação Comercial utilizados no Brasil                           }
{                                                                              }
{  Você pode obter a última versão desse arquivo na página do Projeto ACBr     }
{ Componentes localizado em      http://www.sourceforge.net/projects/acbr      }
{                                                                              }
{  Esta biblioteca é software livre; você pode redistribuí-la e/ou modificá-la }
{ sob os termos da Licença Pública Geral Menor do GNU conforme publicada pela  }
{ Free Software Foundation; tanto a versão 2.1 da Licença, ou (a seu critério) }
{ qualquer versão posterior.                                                   }
{                                                                              }
{  Esta biblioteca é distribuída na expectativa de que seja útil, porém, SEM   }
{ NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU      }
{ ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral Menor}
{ do GNU para mais detalhes. (Arquivo LICENÇA.TXT ou LICENSE.TXT)              }
{                                                                              }
{  Você deve ter recebido uma cópia da Licença Pública Geral Menor do GNU junto}
{ com esta biblioteca; se não, escreva para a Free Software Foundation, Inc.,  }
{ no endereço 59 Temple Street, Suite 330, Boston, MA 02111-1307 USA.          }
{ Você também pode obter uma copia da licença em:                              }
{ http://www.opensource.org/licenses/lgpl-license.php                          }
{                                                                              }
{ Daniel Simões de Almeida  -  daniel@djsystem.com.br  -  www.djsystem.com.br  }
{              Praça Anita Costa, 34 - Tatuí - SP - 18270-410                  }
{                                                                              }
{******************************************************************************}
Agradecimentos:

* Administradores:
- Daniel Simões de Almeida
- André Ferreira de Moraes

* Desenvolvedores:
- Isaque Pinheiro - Doação do componente ao projeto ACBr

{******************************************************************************
|* ACBrSpedFiscal
|*
|* PROPÓSITO: Registro de Alterações
******************************************************************************}

Símbolo : Significado

[+]     : Novo recurso
[*]     : Recurso modificado/melhorado
[-]     : Correção de Bug (assim esperamos)

Versão 0.07b   28/03/10
-- ACBrSPEDFiscal --
[-] Removido campo não existente no AC "ESTQ_FECHA" do Registro1300 
    (por José Moacir)

Versão 0.07b   22/03/10
-- ACBrSPEDFiscal --
[*] Implementado hierarquia no RegistroE250 (por Isaque Pinheiro)
[*] Implementado hierarquia no RegistroE520 e E530 (por Isaque Pinheiro)

Versão 0.07b   18/03/10
-- ACBrSPEDFiscal e ACBrSPEDContabil --
[-] Correção de validação da Inscrição Estadual de "TO".
[*] Removido o parametro "Nulo" da função Fill que trata propriedades do tipo
    Data, agora toda propriedade de data que não for definido uma data para ela
    o valor de retorno será "|", automaticamente.

Versão 0.07b   17/03/10
-- ACBrSPEDFiscal --
[-] Criado nova função "DFill" em ACBrUtilTXT, para atender a formatação de 
    informações com várias casas deciamais. 
    Todas as propriedades que precisa de mais de duas casas decimais foi 
    substituido seu tipo de Currency para Double, e todos passaram a chamar
    a função "DFill".
    As variaveis do Create da class base TACBrTXT, foram comentadas, porque o 
    esta substituindo as informações definidas em design.(solução temporária)

    Note : Recompile seu pacote ACBrSPED.

Versão 0.07a   16/03/10
-- ACBrSPEDFiscal --
[-] Corrigido BUG, quando a função LFill era chamada com o parametro NULL = True
    para os tipos data data, mesmo tendo uma data, retornava vazio.

Versão 0.07a   15/03/10
-- ACBrSPEDFiscal --
[*] Implementado o registro Registro0500 "TABELA DE PLANO DE CONTAS CONTÁBEIS"
    do Bloco 0 por (Alessandro Yamasaki)
[*] Implementado o registro Registro0600 "CENTRO DE CUSTOS" do Bloco 0 
    por (Isaque Pinheiro)

Versão 0.04a   08/03/10
-- ACBrSPEDContabil --
[+] Implementado todos os registros dos blocos que faltavam, e testado no validador
    por (Claudinei)

Versão 0.03a   27/01/10
-- ACBrSPEDContabil --
[*] Implementado geração do registro I200 e a hierarquia dos regsitros I155 
    e I250 por (Mauricio)
[-] Correções de totalizações no Bloco I por (Mauricio)

Versão 0.07a   24/02/10
-- ACBrSPEDFiscal --
[*] Comentei a rotina que gera o BLOCO G, pois segundo o Art. 3o do AC 38/09
    ele só deverá ser gerado apartir de 1 de julho de 2010.

Versão 0.07a   12/02/10
-- ACBrSPEDFiscal --
[*] Implementado do Bloco 1 por (Ricardo JS)
[+] Implemantado todo o código do Bloco G que faltava por (Ricardo JS)

Versão 0.06a   25/01/10
-- ACBrSPEDFiscal --
[+] Implementação feita no Registro1500, conforme Guia Prático EFD 2.0.0 por
    (Isaque Pinheiro)
[+] Implementação feita no RegistroD500, conforme Guia Prático EFD 2.0.0 por
    (Fernando_Totall)

Versão 0.03a   23/01/10
-- ACBrSPEDContabil --
[*] Foi criado uma nova unit (ACBrUtilTXT.pas) na pasta ACBrComum, com o conteúdo
    que está comentado na unit ACBrSped.pas

Versão 0.06a   23/01/10
-- ACBrSPEDFiscal --
[*] Foi criado uma nova unit (ACBrUtilTXT.pas) na pasta ACBrComum, com o conteúdo
    que está comentado na unit ACBrSped.pas

Versão 0.05a   11/01/10
-- ACBrSPEDFiscal --
[-] Correções propriedades dos registros 1300 e 1310.

Versão 0.04a   10/01/10
-- ACBrSPEDContabil --
[-] Corrigido bug na rotina de totalização dos termos de abertura e fechamento,
    Registros I030 e J900.

Versão 0.04a   29/12/09
-- ACBrSPEDFiscal --
[*] Implementado hierarquia dos registro 1360 e 1370 por ( Isaque Pinheiro )

Versão 0.04a   28/12/09
-- ACBrSPEDFiscal --
[*] Implementado hierarquia dos registro 1310 e 1320 por ( Daniel (Totall) )

Versão 0.03a   21/12/09
-- ACBrSPEDFiscal --
[*] Implementado hierarquia do registro E210 por (Márcio Lopes)
[*] Implementado hierarquia dos registros C510 e C590 por (Márcio Lopes)
[*] Implementado hierarquia do registro D190 por (Márcio Lopes)

Versão 0.03a   15/12/09
-- ACBrSPEDFiscal --
[*] Implementado hierarquia dos registros 0175, 0205, 0206, 0220 e H010 
    por (Isaque Pinheiro)

Versão 0.03a   14/12/09
-- ACBrSPEDFiscal --
[+] Adicionado recurso para que um Bloco_X possa pesquisar registros no Bloco_Y

Versão 0.02a   13/12/09
-- ACBrSPEDContabil --
[+] Adicionada propriedade "About" para melhor controle de Versao (DSA)
Versão 0.02a   13/12/09

-- ACBrSPEDFiscal --
[+] Adicionada propriedade "About" para melhor controle de Versao (DSA)
[*] Implementado hierarquia dos registros C120, C130, C160, C165, C171, C172, 
    C173, C174, C175, C176, C177, C178, C179 e C195 por (Isaque Pinheiro)

Versão 0.01a   13/12/09
-- ACBrSPEDFiscal --
[*] Implementado hierarquia dos registros C390, C405, C410, C420, C460 e C490 
    por (Cezinha)
[-] Correção na escrita dos registros C390 e C420.

Versão 0.01a   11/12/09
-- ACBrSPEDContabil --
[+] Implementações nos Blocos I por (Italo J Jr)
    o exemplo está no Bloco_C por (Isaque Pinheiro)

Versão 0.01a   08/12/09
-- ACBrSPEDFiscal --
[*] Implementado hierarquia do registro C370 por (Rodrigo Felipe)

Versão 0.01a   08/12/09
-- ACBrSPEDFiscal --
[*] Implementado hierarquia do registro C470 por (Isaque Pinheiro)
[-] Correção no método do WriteRegistroH010 por (SOFTCOM INFORMATICA)
[-] Correção no método do WriteRegistroC321 por (Diego Verdan)
[-] Correção no método do WriteRegistroC460 por (Agnaldo Partes)

Versão 0.01a   07/12/09
-- ACBrSPEDContabil --
[+] Implementações nos Blocos 0, I e J por (Italo J Jr)

Versão 0.01a   07/12/09
-- ACBrSPEDFiscal --
[*] Implementado RegistroH005List, para criar uma lista do RegistroH005
[+] Adicionado na função SaveFileTXT as chamada:
    if Bloco_H.RegistroH005.Count > 0 then Write(txtFile, WriteRegistroH005);
    if Bloco_H.RegistroH010.Count > 0 then Write(txtFile, WriteRegistroH010);

Versão 0.01a   04/12/09
-- ACBrSPEDFiscal --
[+] Implementado hierarquia do registro D590 por (Marcos e Jean)

Versão 0.01a   01/12/09
-- ACBrSPEDFiscal --
[+] Adicionada:
    procedure CriaRegistros;
    procedure LiberaRegistros;
    As procedures foram adiconadas em todos os Blocos para atender um vazamento
    de memória ao finalizar o Demo. 
    Motivo: 
    Ao limpar os registros filhos com o método "Clear", e ao finalizar o Demo
    os registros filhos não estavm sendo liberados da memória pelo método "Free".
    Essas implementações corrigiram também um BUG, do qual os totais dos registros
    filhos não estavam sendo zerados após a geração do TXT.

Versão 0.01a   30/11/09
-- ACBrSPEDFiscal --
[+] Implementado hierarquia dos registros C140 e C141 por (Márcio Lopes)
[-] Mudado tipo da propriedade "QTD_PARC" do Bloco_C, RegistroC140, para 
    "Integer", conforme descrito no AC 09/08.

Versão 0.01a   28/11/09
-- ACBrSPEDFiscal --
[+] Adicionada:
    function LocalizaRegistro(pCOD_PART: AnsiString): boolean;
    Bloco 0 - Registro0150
[+] Adicionada por (Márcio Lopes)
    function LocalizaRegistro(pUNID: AnsiString): boolean; 
    Bloco 0 - Registro0190
    function LocalizaRegistro(pCOD_ITEM: AnsiString): boolean;
    Bloco 0 - Registro0200
    function LocalizaRegistro(pCOD_NAT: AnsiString): boolean;
    Bloco 0 - Registro0400

Versão 0.01a   27/11/09
-- ACBrSPEDFiscal --
[+] Implementados a procedure "LimpaRegistros", para limpar os registros das
    listas antes de gerar o TXT por (Isaque Pinheiro)

Versão 0.01a   25/11/09
-- ACBrSPEDFiscal --
[*] Implementados checagem de NFs Canceladas no Bloco C método WriteRegistroC100
    por (Jean Barreiros e Marcos Fernando)

Versão 0.01a   24/11/09
-- ACBrSPEDFiscal --
[+] Implementados os métodos que faltavam do Bloco_1 e Bloco_H 
    por (Agnaldo Prates)

Versão 0.01a   19/11/09
-- ACBrSPEDFiscal --
[-] Limpeza de código após, modificações para geração de arquivos em hierarquia
[-] Corrigido BUG, do qual não estava executando a função Trim do delphi 
    corretamente, quando a propriedade TrimString = True

Versão 0.01a   18/11/09
-- ACBrSPEDFiscal --
[-] Cercado no método "WriteRegistroC190" o campo "COD_OBS" por não passar na
    validação do PVA.
[+] Implementado a hierarquia de Pai-Filho do RegistroC190 (por Jean Barreiros)
[-] Retirada as propriedades "ZeroRetornaVazio"
[*] Susbstituído o tipo da propriedade "IND_MOV", novamente para "Integer"
[*] Criado o parametro "Nulo" nas funções LFill com os parametros tipo
    Integer, Currency e TDateTime.

Versão 0.01a   17/11/09
-- ACBrSPEDFiscal --
[+] Adicionado ao demo o código de exemplo para gerar resgitros em hierarquia
    do Bloco_C (por Jean Barreiros)
[+] Criado nova propriedade "TrimString", onde se for TRUE, retorna a string
    sem espaços em branco iniciais e finais. Usada nas Funções (LFill e RFill)
[*] Susbstituído o tipo da propriedade "IND_MOV", de "Integer" para "AnsiString"
    porque recebe o valor "0" e tava retornado vazio, por causa da propriedade
    ZeroRetornaVazio
[*] A propriedade "IND_MOV" agora será iniciada com valor padrão '1' 
[*] Mudado o nome da propriedade "RetornoVazio" para "ZeroRetornaVazio", para 
    melhor entendimento da funcionalidade dessa propriedade.
[*] ACBrSPEDFiscal foi restruturado para gerar os registros por hierarquia de
    Pai-Filho
[*] Substituindo todas as declarações do tipo "String" para "AnsiString", 
    para compatibilidade entre Lazarus, D2009, D2010 e superior

Versão 0.01a   13/11/09
-- ACBrSPEDFiscal --
[+] Implementações do Bloco_D por (Agnaldo Prates)

Versão 0.01a   12/11/09
-- ACBrSPEDFiscal --
[+] Novas implementações feitas por (Agnaldo Prates)
[+] Criada função StrZero em (ACBrSpedUtils.pas)
    Nota: Logo usaremos as funções do próprio ACBr.
[+] Nova propriedade "CurMascara", para formatar os valores tipo Currency
[-] Alterada "function LFill(Value: Currency..." em (ACBrSped.pas), 
    para formatar o valor com a mascara que tiver na nova propriedade 
    "CurMascara"
[-] Adicionada em (ACBrSpedFiscal.pas) os métodos
    procedure SetDelimitador(const Value: string); override;
    procedure SetCurMascara(const Value: string); override;
[-] No Bloco 9, foi alterado as propriedades do tipo Currency para Integer
    para que essas proriedades não sejam formatadas como currency
[-] Todos as Units (Bloco_?_Class.pas) foi alterada o método que totaliza a
    quantidade de registros de LFill(QTD_LIN_?,0,0) para LFill(QTD_LIN_?,0),
    porque tava formatando com a mascara

Versão 0.01a   11/11/09
-- ACBrSPEDFiscal --
[+] Implementação de métodos no Bloco D por (Franklin Haut)
[-] Correção no nome de propriedades nos Blocos C, D e E por (Franklin Haut)
[+] Implementação de todos os métodos que faltavam no Bloco 1 por (Agnaldo Prates)
[+] Implementação de vários métodos nos Blocos 0, C e E  por (Agnaldo Prates)
[-] Correção de tipos de proriedades dos Blocos 0, C e E por (Agnaldo Prates)

Versão 0.01a   01/11/09
-- ACBrSPEDFiscal --
[-] Algumas correções feitas por (Agnaldo Prates)

Versão 0.01a   01/11/09
-- ACBrSPEDFiscal --
[*] Na Unit (ACBrSped.pas) a propriedade "Delimitador" e o evento "OnError"
    passaram para "public". E na Unit (ACBrSpedFiscal.pas) foi adicionada
    em "published" as linhas abaixo:
    property Delimitador;
    property OnError;
[-] Para que o evento "OnError" dos Blocos fossem disparados foi incluído no
    método "SaveFileTXT" do componente (ACBrSpedFiscal.pas), as linhas abaixo:
    FBloco_0.OnError := OnError;
    FBloco_1.OnError := OnError;
    FBloco_C.OnError := OnError;
    FBloco_D.OnError := OnError;
    FBloco_E.OnError := OnError;
    FBloco_H.OnError := OnError;
    FBloco_9.OnError := OnError;
[-] Foi incluído nos métodos "WriteRegistro" a linha (Result := '').
[-] Nos métodos "WriteRegistro" que tem "FOR" a linha 
    "Registro0990.QTD_LIN_0 := Registro0990.QTD_LIN_0 + 1", foi mudada para
    Dentro do For, como observado pelo (Marcio Lopes).

Versão 0.01a   31/10/09
-- ACBrSPEDFiscal --
[*] O registro 0015 do Bloco 0, foi implementado para receber uma lista de 
      registro, como observado pelo (Marcio Lopes).
[-] Foi substituído em todos os métodos WriteRegistro, o caracter '|', pela
    propriedade "Delimitador"
[-] Modificado todas funções GetItem para compatibilidade com Lazarus de
    "Result := Inherited Items[Index]" para 
	"Result := TTipo(Inherited Items[Index])"   (Por: Isaque Pinheiro)
	
[+] Package para o Lazarus (ACBr_SPEDFiscal.lpk)    (Por: DSA)
[+] Conversão do Demo para Lazarus (SPEDFiscal.lpi) (Por: DSA)
	
Versão 0.01a   30/10/09
-- ACBrSPEDFiscal e ACBrSPEDContabil --
[+] Início do Projeto
[+] Primeira Versao lançada baseado no componente fornecido por Isaque Pinheiro.










